<TargetEndpoint name="eps">
  <PreFlow/>
  <Flows>
    <Flow name="No-Auth">
      <Condition>(proxy.pathsuffix MatchesPath "/metadata")</Condition>
    </Flow>
    <Flow name="ApiKey-Auth">
      <Request>
        <Step>
          <Name>KeyValueMapOperations.GetSharedSecureVariables</Name>
        </Step>
        <Step>
          <Condition>private.apigee.status-endpoint-api-key NotEquals request.header.apikey</Condition>
          <Name>RaiseFault.403Forbidden</Name>
        </Step>
      </Request>
      <Condition>((proxy.pathsuffix MatchesPath "/_status") or (proxy.pathsuffix MatchesPath "/_validatormetrics") or (proxy.pathsuffix MatchesPath "/_validatormetrics/**")) and ((request.verb = "GET") or (request.verb = "HEAD"))</Condition>
    </Flow>
    <Flow name="Default-Auth">
      <Request>
        <Step>
          <Name>OauthV2.VerifyAccessToken</Name>
        </Step>
        <Step>
          <Name>AssignMessage.SetAccessModeApplicationRestricted</Name>
        </Step>
        <Step>
          <Name>AssignMessage.SetAccessModeUserRestricted</Name>
          <Condition>(scope JavaRegex "(.* )?urn:nhsd:apim:user-nhs-id:aal3:electronic-prescription-service-api:(prescribing|dispensing|tracker)( .*)?")</Condition>
        </Step>
        <Step>
          <!-- Header NHSD-Request-ID must be in the correct format (GUID) -->
          <Name>RaiseFault.400MissingHeader</Name>
          <Condition>(not original-request-details.header.X-Request-ID ~~ "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$")</Condition>
        </Step>
        <Step>
          <Name>FlowCallout.ApplyRateLimiting</Name>
        </Step>
        <Step>
          <Name>FlowCallout.UserRoleService</Name>
          <Condition>(access-mode Equals "user-restricted")</Condition>
        </Step>
        <!-- Get ODS code from UserInfo -->
        <Step>
          <Name>AssignMessage.AddUserIdHeader</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddIssuerHeader</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddApplicationIdHeader</Name>
        </Step>
        <!-- If we require an ASID, fail if app.asid is null -->
        {% if REQUIRE_ASID %}
        <Step>
          <Name>RaiseFault.400BadRequest</Name>
          <Condition>(app.asid is null || app.party-key is null)</Condition>
        </Step>
        {% endif %}
        <Step>
          <!-- Populate the ASID and party-key var from the app -->
          <Name>AssignMessage.PopulateAsidAndPartyKeyFromApp</Name>
          <Condition>(app.asid isNot null AND app.party-key isNot null)</Condition>
        </Step>
        <Step>
          <!-- Populate the ASID and party-key var with the default ASID -->
          <Name>KeyValueMapOperations.GetDefaultAsidAndPartyKey</Name>
          <Condition>(app.asid is null || app.party-key is null)</Condition>
        </Step>
        <Step>
          <!-- Add the ASID and party-key var as a header -->
          <Name>AssignMessage.AddAsidAndPartyKeyHeader</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddScopeHeader</Name>
        </Step>
        <Step>
          <!--This should always be the last Step - as it is just before the message is sent - so the initial request stays intact for as long as possible.
                      The Swapping of the Request Headers converts X-Request-ID and X-Correlation-ID to NHSD-Request-ID and NHSD-Correlation-ID before sending to backend. -->
          <Name>AssignMessage.Swap.RequestHeaders</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AssignMessage.Mirror.CorrelationID</Name>
          <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
        </Step>
        <Step>
          <Name>AssignMessage.Mirror.RequestID</Name>
          <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
        </Step>
      </Response>
    </Flow>
  </Flows>
  <HTTPTargetConnection>
    <Properties>
      <!-- Allow 'expected' error code responses to pass unhindered to caller
      Anything unexpected will be sanitised by the DefaultFaultRule -
      https://docs.apigee.com/api-platform/fundamentals/fault-handling#customhandlingofhttperrorcodesfromthetargetserver -->
      <Property name="success.codes">1xx,2xx,3xx,4xx</Property>
    </Properties>
     <URL>https://prescribe-dispense-pr-3135.dev.eps.national.nhs.uk</URL>
  </HTTPTargetConnection>
  <FaultRules>
    <FaultRule name="user_role_shared_flow_error">
      <Condition>(sharedFlow.userRoleError is "true")</Condition>
      <Step>
        <Name>AssignMessage.Errors.UserRoleSharedFlow</Name>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.CorrelationID</Name>
        <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.RequestID</Name>
        <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Errors.CatchAllMessage</Name>
      </Step>
    </FaultRule>
    <FaultRule name="access_token_expired">
      <Condition>oauthV2.OauthV2.VerifyAccessToken.failed</Condition>
      <Step>
        <Name>ExtractVariables.OAuthErrorFaultString</Name>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.CorrelationID</Name>
        <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.RequestID</Name>
        <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Errors.OAuthPolicyResponse</Name>
      </Step>
    </FaultRule>
    <FaultRule name="rate_limit_exceeded">
      <Condition>(fault.name Equals "QuotaViolation") or (fault.name Equals "SpikeArrestViolation")</Condition>
      <Step>
        <Name>AssignMessage.Errors.RateLimitExceeded</Name>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.CorrelationID</Name>
        <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.RequestID</Name>
        <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Errors.CatchAllMessage</Name>
      </Step>
    </FaultRule>
    <FaultRule name="invalid_request_id">
      <Condition>(original-request-details.header.X-Request-ID != null) and (not original-request-details.header.X-Request-ID ~~ "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$")</Condition>
      <Step>
        <Name>AssignMessage.Errors.InvalidRequestID</Name>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.CorrelationID</Name>
        <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.RequestID</Name>
        <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Errors.CatchAllMessage</Name>
      </Step>
    </FaultRule>
    <FaultRule name="invalid_user_role_id">
      <Condition>(grant_type is "authorization_code") and ((request.header.NHSD-Session-URID is null) or (not request.header.NHSD-Session-URID ~~ ".+"))</Condition>
      <Step>
        <Name>AssignMessage.Errors.MissingUserRoleID</Name>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.CorrelationID</Name>
        <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.RequestID</Name>
        <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Errors.CatchAllMessage</Name>
      </Step>
    </FaultRule>
    {% if REQUIRE_ASID %}
    <FaultRule name="no_asid_provided">
      <Condition>(app.asid is null || app.party-key is null)</Condition>
      <Step>
        <Name>AssignMessage.Errors.MissingASID</Name>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.CorrelationID</Name>
        <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Mirror.RequestID</Name>
        <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
      </Step>
      <Step>
        <Name>AssignMessage.Errors.CatchAllMessage</Name>
      </Step>
    </FaultRule>
    {% endif %}
    <FaultRule name="deliberate-fault">
      <Condition>(fault.name = "RaiseFault")</Condition>
    </FaultRule>
  </FaultRules>
  <DefaultFaultRule>
    <Step>
      <Name>AssignMessage.Errors.CatchAllMessage</Name>
    </Step>
    <Step>
      <Name>AssignMessage.Mirror.CorrelationID</Name>
      <Condition>(original-request-details.header.X-Correlation-ID ~~ ".+")</Condition>
    </Step>
    <Step>
      <Name>AssignMessage.Mirror.RequestID</Name>
      <Condition>(original-request-details.header.X-Request-ID ~~ ".+")</Condition>
    </Step>
  </DefaultFaultRule>
</TargetEndpoint>
